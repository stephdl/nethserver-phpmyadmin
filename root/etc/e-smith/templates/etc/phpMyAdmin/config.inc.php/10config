/* Servers configuration */
$i = 0;

/* Server localhost (config:root) [1] */
$i++;
$cfg['Servers'][$i]['host'] = 'localhost';
$cfg['Servers'][$i]['extension'] = 'mysqli';
$cfg['Servers'][$i]['port'] = '';
$cfg['Servers'][$i]['socket'] = '/var/lib/mysql/mysql.sock';
$cfg['Servers'][$i]['connect_type'] = 'socket';
$cfg['Servers'][$i]['compress'] = false;

# standalone or login mode
$scriptname=end(explode('/',$_SERVER['PHP_SELF']));
$scriptpath=str_replace($scriptname,'',$_SERVER['PHP_SELF']);


# standalone login part
{
my $adminaccess = ($phpmyadmin{'adminaccess'} || 'enabled');
my $multiaccess = ($phpmyadmin{'multiaccess'} || 'disabled');

if (("$adminaccess" eq "enabled"))
#|| ("$multiaccess" eq "enabled"))
  {
  $OUT .="if (\$scriptpath==\"/phpmyadmin/\" && \$_SERVER['PHP_AUTH_USER']=='admin')\n";
  $OUT .="{\n";
  $OUT .="\$cfg['Servers'][\$i]['auth_type'] = 'config';\n";
  $OUT .="\$cfg['Servers'][\$i]['user'] = 'root';\n";
  my $pw = esmith::util::genRandomPassword('/etc/my.pwd') || die('Could not read mysql root password!');
  $OUT .="\$cfg['Servers'][\$i]['password']  = '$pw';\n";
  $OUT .="}";
  }
else
  {
  $OUT .="# standalone admin configuration disabled";
  }
}
# end of  standalone login part


# multiuser login part
{
my $adminaccess = ($phpmyadmin{'adminaccess'} || 'enabled');
my $multiaccess = ($phpmyadmin{'multiaccess'} || 'disabled');

  $OUT .="\n";
if (("$multiaccess" eq "enabled") && ("$adminaccess" eq "enabled"))
  {
  $OUT .="if (\$scriptpath==\"/phpmyadmin-multi/\")\n";
  $OUT .="{\n";
  }
if (("$multiaccess" eq "enabled"))
  {
  $OUT .="\$cfg['Servers'][\$i]['auth_type'] = 'cookie';\n";
  my $blowfishsecret =  NethServer::Password->new( 'blowfishsecret', { 'length' => 128 }) ->save()->getAscii()
        || die 'cannot generate the blowfishsecret password';
    $OUT .="\$cfg['blowfish_secret'] = '$blowfishsecret';\n";
  }
else
  {
   $OUT .="# multiuser disabled\n";
  }
if (("$multiaccess" eq "enabled") && ("$adminaccess" eq "enabled"))
  {
  $OUT .="}\n";
  }

}
# end of multiuser login part

/* enhanced servers configuration */

$cfg['Servers'][$i]['pmadb'] = 'phpmyadmin';
$cfg['Servers'][$i]['controluser'] = 'phpmyadmin';
$cfg['Servers'][$i]['controlpass'] = '{esmith::util::genRandomPassword('phpmyadmin') || die('Could not generate phpmyadmin password!');}';
$cfg['Servers'][$i]['bookmarktable'] = 'pma_bookmark';
$cfg['Servers'][$i]['relation'] = 'pma_relation';
$cfg['Servers'][$i]['userconfig'] = 'pma_userconfig';
$cfg['Servers'][$i]['table_info'] = 'pma_table_info';
$cfg['Servers'][$i]['column_info'] = 'pma_column_info';
$cfg['Servers'][$i]['history'] = 'pma_history';
$cfg['Servers'][$i]['recent'] = 'pma_recent';
$cfg['Servers'][$i]['table_uiprefs'] = 'pma_table_uiprefs';
$cfg['Servers'][$i]['tracking'] = 'pma_tracking';
$cfg['Servers'][$i]['table_coords'] = 'pma_table_coords';
$cfg['Servers'][$i]['pdf_pages'] = 'pma_pdf_pages';
$cfg['Servers'][$i]['designer_coords'] = 'pma_designer_coords';
$cfg['Servers'][$i]['AllowRoot'] = TRUE;
$cfg['Servers'][$i]['AllowDeny']['rules'] = array();
$cfg['Servers'][$i]['AllowNoPassword'] = FALSE;

/* End of servers configuration */
